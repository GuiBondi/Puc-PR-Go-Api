name: Go CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'  # Make sure to match the version specified in go.mod

    - name: Install dependencies
      run: go mod tidy  # Ensures that dependencies are installed correctly

    - name: Build the project
      run: go build -v ./...

    - name: Run unit tests
      run: go test -v ./...  # This will run all tests in the project and return results

  deploy:
    runs-on: ubuntu-latest
    needs: build  # This ensures the deploy job runs only if the build and test job is successful
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: guibondi
        password: ${{ secret.SENHADOCKER}}  # Ensure this is stored in GitHub Secrets

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: guibondi/simpleapi:latest

    - name: Deploy to Docker for tests
      run: |
        set -e
        docker pull guibondi/simpleapi:latest
        docker run -d -p 8080:8080 guibondi/simpleapi:latest

    - name: Send Discord Notification
      run: |
        curl -H "Content-Type: application/json" \
        -d '{"content": "Deployment complete for **simpleapi**. The Docker image has been successfully deployed."}' \
        ${{ secret.URLWEBHOOK }}
